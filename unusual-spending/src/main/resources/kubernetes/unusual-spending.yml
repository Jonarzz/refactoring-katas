---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: unusual-spending
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  name: unusual-spending
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: unusual-spending
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: unusual-spending
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  name: unusual-spending
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: unusual-spending
      app.kubernetes.io/version: 1.0.0-SNAPSHOT
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unusual-spending
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
    spec:
      containers:
        - name: unusual-spending
          image: io.github.jonarzz/unusual-spending:1.0.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: QUARKUS_LOG_LEVEL
              value: DEBUG
            # JMS
            - name: JMS_PAYMENT_DESTINATION
              value: payment/register/v1
            - name: JMS_PAYMENT_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: QUARKUS_ARTEMIS_URL
              value: tcp://jms-broker:61616
            - name: QUARKUS_ARTEMIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: payment-secret
                  key: jms-username
            - name: QUARKUS_ARTEMIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: payment-secret
                  key: jms-password
            # database
            - name: DATABASE_PAYMENT_URL
              value: jdbc:h2:tcp://database:1521/payment
            - name: DATABASE_PAYMENT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: payment-secret
                  key: database-username
            - name: DATABASE_PAYMENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: payment-secret
                  key: database-password
      initContainers: # TODO run as part of Quarkus startup
        - name: liquibase
          image: liquibase/liquibase:4.12
          imagePullPolicy: IfNotPresent
          command:
            - liquibase
            - update
          args:
            - '--url=jdbc:h2:tcp://database:1521/payment'
            - '--username=$(DATABASE_USERNAME)'
            - '--password=$(DATABASE_PASSWORD)'
            - '--changelog-file=create-payment-tables.yaml'
            - '--classpath=/liquibase/custom-config'
            - '--log-level=INFO'
          env:
            # H2 username and password are set on first connection to the payment database
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: payment-secret
                  key: database-username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: payment-secret
                  key: database-password
          volumeMounts:
            - name: payment-liquibase-changelog
              mountPath: /liquibase/custom-config
      volumes:
        - name: payment-liquibase-changelog
          configMap:
            name: payment-liquibase-config
